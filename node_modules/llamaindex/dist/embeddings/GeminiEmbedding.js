import { GEMINI_MODEL, GeminiSessionStore } from "../llm/gemini.js";
import { BaseEmbedding } from "./types.js";
/**
 * GeminiEmbedding is an alias for Gemini that implements the BaseEmbedding interface.
 */ export class GeminiEmbedding extends BaseEmbedding {
    model;
    temperature;
    topP;
    maxTokens;
    session;
    constructor(init){
        super();
        this.model = init?.model ?? GEMINI_MODEL.GEMINI_PRO;
        this.temperature = init?.temperature ?? 0.1;
        this.topP = init?.topP ?? 1;
        this.maxTokens = init?.maxTokens ?? undefined;
        this.session = init?.session ?? GeminiSessionStore.get();
    }
    async getEmbedding(prompt) {
        const client = this.session.gemini.getGenerativeModel({
            model: this.model
        });
        const result = await client.embedContent(prompt);
        return result.embedding.values;
    }
    getTextEmbedding(text) {
        return this.getEmbedding(text);
    }
    getQueryEmbedding(query) {
        return this.getTextEmbedding(query);
    }
}
