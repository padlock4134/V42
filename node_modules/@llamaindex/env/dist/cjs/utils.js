"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    AsyncLocalStorage: function() {
        return _nodeasync_hooks.AsyncLocalStorage;
    },
    CustomEvent: function() {
        return defaultCustomEvent;
    },
    getEnv: function() {
        return getEnv;
    }
});
const _nodeasync_hooks = require("node:async_hooks");
function getEnv(name) {
    if (typeof process === "undefined" || typeof process.env === "undefined") {
        // @ts-expect-error
        if (typeof Deno === "undefined") {
            throw new Error("Current environment is not supported");
        } else {
            // @ts-expect-error
            return Deno.env.get(name);
        }
    }
    return process.env[name];
}
class CustomEvent extends Event {
    #detail;
    get detail() {
        return this.#detail;
    }
    constructor(event, options){
        super(event, options);
        this.#detail = options?.detail;
    }
}
// Node.js doesn't have CustomEvent by default
// Refs: https://github.com/nodejs/node/issues/40678
const defaultCustomEvent = globalThis.CustomEvent || CustomEvent;
